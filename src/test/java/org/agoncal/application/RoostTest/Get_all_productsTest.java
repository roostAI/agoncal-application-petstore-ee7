/*
Test generated by RoostGPT for test postman-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Get all products\r\n' +
    '    When the client sends a GET request "/api/products" to get the list of all products\r\n' +
    '    Then the list of products returned should be empty',
  title: 'Get all products'
}

*/package org.agoncal.application.RoostTest;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.is;

public class ProductsTest {

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = System.getenv("ROOST_SERVER_URL");
        RestAssured.basePath = "/api/products";
    }

    @Test
    public void testGetAllProducts() {
        // Scenario: Get all products
        // When the client sends a GET request "/api/products" to get the list of all products
        // Then the list of products returned should be empty

        Response response = given()
                .when().get()
                .then().assertThat().statusCode(200)
                .body("isEmpty()", is(true))
                .extract().response();

        // Assert that the response body is empty
        assert(response.body().asString().equals("[]"));
    }
}
