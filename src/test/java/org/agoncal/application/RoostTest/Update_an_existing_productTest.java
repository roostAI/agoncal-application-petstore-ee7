/*
Test generated by RoostGPT for test postman-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Update an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    And the client provides the following product data:\r\n' +
    '      | name           | description                      | price |\r\n' +
    '      | Updated Product | This is an updated test product. | 15.0  |\r\n' +
    '    When the client sends a PUT request to "/api/products/1"\r\n' +
    '    Then the product with ID 1 should be updated with the provided details',
  title: 'Update an existing product'
}

*/package org.agoncal.application.RoostTest;

import io.restassured.http.ContentType;
import org.json.JSONObject;
import org.testng.annotations.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class ProductEndpointTest {

    @Test(description = "Scenario: Update an existing product")
    public void testUpdateProduct() {
        // Define request headers
        String headers = "{\"Content-Type\":\"application/json\"}";

        // Define request payload
        JSONObject payload = new JSONObject()
                .put("name", "Updated Product")
                .put("description", "This is an updated test product.")
                .put("price", 15.0);

        // Endpoint URL
        String apiUrl = System.getenv("ROOST_SERVER_URL") + "/api/products/1";

        // Actual Test Case
        given()
                .contentType(ContentType.JSON)
                .headers(headers)
                .body(payload.toString())
                .when()
                .put(apiUrl)
                .then()
                .assertThat()
                .statusCode(200)
                .body("name", equalTo("Updated Product"))
                .body("description", equalTo("This is an updated test product."))
                .body("price", equalTo(15.0));
    }
}
