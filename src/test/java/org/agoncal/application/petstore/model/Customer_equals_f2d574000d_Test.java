/*
Test generated by RoostGPT for test agoncal-application-petstore-ee7 using AI Type Open AI and AI Model gpt-4

Below are the test scenarios:

1. Test when the object 'o' is the same as 'this' object. The equals method should return true.

2. Test when the object 'o' is null. The equals method should return false.

3. Test when the object 'o' is not an instance of the same class. The equals method should return false.

4. Test when the 'login' field of the object 'o' is the same as the 'login' field of 'this' object. The equals method should return true.

5. Test when the 'login' field of the object 'o' is different from the 'login' field of 'this' object. The equals method should return false.

6. Test when the 'login' field of the object 'o' is null and the 'login' field of 'this' object is not null. The equals method should return false.

7. Test when the 'login' field of 'this' object is null and the 'login' field of the object 'o' is not null. The equals method should return false.

8. Test when the 'login' field of both 'this' object and the object 'o' are null. The equals method should return true.

Remember, the 'login' field here is assumed to be a unique identifier for the 'Customer' object. The equals method is essentially comparing two 'Customer' objects by this 'login' field.
*/
package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class Customer_equals_f2d574000d_Test {
    private Customer customer1, customer2;

    @BeforeEach
    void setUp() {
        customer1 = new Customer();
        customer2 = new Customer();
    }

    @Test
    void testEqualsSameObject() {
        assertTrue(customer1.equals(customer1));
    }

    @Test
    void testEqualsNullObject() {
        assertFalse(customer1.equals(null));
    }

    @Test
    void testEqualsDifferentClass() {
        assertFalse(customer1.equals(new String()));
    }

    @Test
    void testEqualsSameLogin() {
        customer1.setLogin("testLogin");
        customer2.setLogin("testLogin");
        assertTrue(customer1.equals(customer2));
    }

    @Test
    void testEqualsDifferentLogin() {
        customer1.setLogin("testLogin1");
        customer2.setLogin("testLogin2");
        assertFalse(customer1.equals(customer2));
    }

    @Test
    void testEqualsNullLoginInThis() {
        customer1.setLogin(null);
        customer2.setLogin("testLogin");
        assertFalse(customer1.equals(customer2));
    }

    @Test
    void testEqualsNullLoginInOther() {
        customer1.setLogin("testLogin");
        customer2.setLogin(null);
        assertFalse(customer1.equals(customer2));
    }

    @Test
    void testEqualsNullLoginInBoth() {
        customer1.setLogin(null);
        customer2.setLogin(null);
        assertTrue(customer1.equals(customer2));
    }
}
