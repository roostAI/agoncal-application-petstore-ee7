// Test generated by RoostGPT for test java-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

/*
Here are a few test scenarios to verify the `equals` method logic:

1. Test when 'this' and 'o' both refer to the same `Address` object. The `equals` method should return `true`.

2. Test when 'o' is `null`. The `equals` method should return `false`.

3. Test when 'o' refers to an object of a different class. The `equals` method should return `false`.

4. Test when 'o' is an `Address` object but have different values for one or more of the `street1`, `city`, and `zipcode` fields. The `equals` method should return `false`.

5. Test when 'o' is an `Address` object with exactly the same `street1`, `city`, and `zipcode` values as 'this'. The `equals` method should return `true`.

6. Test when 'o' is an `Address` object where `street1`, `city` and `zipcode` of both 'this' and 'o' are `null`. The `equals` method should return `true`.

7. Test when 'o' is an `Address` object where `street1`, `city` or `zipcode` of either 'this' or 'o' is `null`. The `equals` method should return `false`. 

Remember, the `equals` method is expected not to throw any Exception. Instead, it should always return a boolean value.
*/
/*test*/ 
package org.agoncal.application.petstore.model;

import nl.jqno.equalsverifier.EqualsVerifier;
import nl.jqno.equalsverifier.Warning;
import org.junit.jupiter.api.Test;

public class Address_equals_f2d574000d_Test {

    @Test
    public void equalsContract() {
        EqualsVerifier.forClass(Address.class)
                .suppress(Warning.STRICT_INHERITANCE)
                .suppress(Warning.NONFINAL_FIELDS)
                .withPrefabValues(Country.class, new Country("isoCode1", "name1", "printableName1", "iso3_1", "numcode1"), new Country("isoCode2", "name2", "printableName2", "iso3_2", "numcode2"))
                .verify();
    }
}
