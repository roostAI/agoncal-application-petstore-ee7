/*
Test generated by RoostGPT for test agoncal-application-petstore-ee7 using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when the 'o' object is the same as 'this' object.
   - Input: Pass 'this' object as an argument to the equals function.
   - Expected Result: The function should return true.

2. Scenario: Test when the 'o' object is null.
   - Input: Pass a null value as an argument to the equals function.
   - Expected Result: The function should return false.

3. Scenario: Test when the 'o' object is of a different class than the 'this' object.
   - Input: Pass an object of a different class as an argument to the equals function.
   - Expected Result: The function should return false.

4. Scenario: Test when the 'o' object is of the same class as 'this' object, but with a different 'name' value.
   - Input: Pass an object of the same class but with a different 'name' value as an argument to the equals function.
   - Expected Result: The function should return false.

5. Scenario: Test when the 'o' object is of the same class as 'this' object and also has the same 'name' value.
   - Input: Pass an object of the same class and with the same 'name' value as an argument to the equals function.
   - Expected Result: The function should return true.

6. Scenario: Test when the 'name' property of the 'this' object is null.
   - Input: Make the 'name' property of the 'this' object null and pass an object with a non-null 'name' as an argument to the equals function.
   - Expected Result: The function should return false.

7. Scenario: Test when the 'name' property of the 'o' object is null.
   - Input: Pass an object with a null 'name' as an argument to the equals function.
   - Expected Result: The function should return false.

8. Scenario: Test when both 'name' properties of the 'o' and 'this' objects are null.
   - Input: Make the 'name' property of the 'this' object null and pass an object with a null 'name' as an argument to the equals function.
   - Expected Result: The function should return true.
*/
package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class Category_equals_f2d574000d_Test {

    @Test
    public void testEqualsMethodWithSameObject() {
        Category category = new Category("Cat", "A small domesticated carnivorous mammal");
        assertTrue(category.equals(category));
    }

    @Test
    public void testEqualsMethodWithNull() {
        Category category = new Category("Dog", "A domesticated carnivorous mammal");
        assertFalse(category.equals(null));
    }

    @Test
    public void testEqualsMethodWithDifferentClass() {
        Category category = new Category("Bird", "A warm-blooded egg-laying vertebrate");
        assertFalse(category.equals(new String("Bird")));
    }

    @Test
    public void testEqualsMethodWithDifferentName() {
        Category category1 = new Category("Fish", "A limbless cold-blooded vertebrate animal");
        Category category2 = new Category("Reptile", "A group of cold-blooded vertebrates");
        assertFalse(category1.equals(category2));
    }

    @Test
    public void testEqualsMethodWithSameName() {
        Category category1 = new Category("Amphibian", "Cold-blooded vertebrate typically living on land");
        Category category2 = new Category("Amphibian", "Cold-blooded vertebrate typically living on land");
        assertTrue(category1.equals(category2));
    }

    @Test
    public void testEqualsMethodWithNullNameInThis() {
        Category category1 = new Category(null, "Description");
        Category category2 = new Category("Invertebrate", "Animals that neither possess nor develop a vertebral column");
        assertFalse(category1.equals(category2));
    }

    @Test
    public void testEqualsMethodWithNullNameInO() {
        Category category1 = new Category("Mammal", "A warm-blooded vertebrate animal of a class");
        Category category2 = new Category(null, "Description");
        assertFalse(category1.equals(category2));
    }

    @Test
    public void testEqualsMethodWithNullNames() {
        Category category1 = new Category(null, "Description");
        Category category2 = new Category(null, "Description");
        assertTrue(category1.equals(category2));
    }
}
