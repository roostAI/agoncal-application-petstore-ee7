// Test generated by RoostGPT for test java-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

/*
1. **Scenario**: Checking when two instance variables denote the same country instance. 

   **Expected Result**: The `equals` method should return true.

2. **Scenario**: Checking when the instance variable and the object refer to different country instances but with the same `isoCode`.

   **Expected Result**: The `equals` method should return true.

3. **Scenario**: Passing a null argument to the `equals` method.

   **Expected Result**: The `equals` method should return false.

4. **Scenario**: Checking the equality of two different classes.

   **Expected Result**: The `equals` method should return false.

5. **Scenario**: Checking when two instance variables denote different country instances.

   **Expected Result**: The `equals` method should return false,.

6. **Scenario**: Checking the equality when `o` is the instance itself.

   **Expected Result**: The `equals` method should return true.

7. **Scenario**: Checking the equality when `isoCode` is null.

   **Expected Result**: The `equals` method should return a NullPointerException if `isoCode` has not been initialised.

8. **Scenario**: Checking the equality of two instances having the same `isoCode`.

   **Expected Result**: The `equals` method should return true.
  
9. **Scenario**: Checking the equality of two instances having different `isoCode`.

   **Expected Result**: The `equals` method should return false.
   
10. **Scenario**: Checking the equality of the instance with an object being an instance of another unrelated class.

    **Expected Result**: The `equals` method should return false.
*/
package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class Country_equals_f2d574000d_Test {
    private Country country1;
    private Country country2;

    @BeforeEach
    void setUp() {
        country1 = new Country("iso1", "country1", "printableName1", "iso31", "numcode1");
        country2 = new Country("iso1", "country1", "printableName1", "iso31", "numcode1");
    }

    @Test
    void testEqualsOnSameInstance() {
        assertTrue(country1.equals(country1));
    }

    @Test
    void testEqualsOnDifferentInstancesWithSameIsoCode() {
        assertTrue(country1.equals(country2));
    }

    @Test
    void testEqualsOnNullArg() {
        assertFalse(country1.equals(null));
    }

    @Test
    void testEqualsOnDifferentClasses() {
        assertFalse(country1.equals(new String()));
    }

    @Test
    void testEqualsOnDifferentInstances() {
        Country country3 = new Country("iso2", "country2", "printableName2", "iso32", "numcode2");
        assertFalse(country1.equals(country3));
    }

    @Test
    void testEqualsOnIsoCodeNull() {
        Country country4 = new Country();
        assertThrows(NullPointerException.class, () -> {
            country4.equals(country1);
        });
    }
}
