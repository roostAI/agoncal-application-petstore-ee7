// Test generated by RoostGPT for test java-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

/*
1. Scenario: Comparing a Country object with itself.  
   Expected Result: The equals() method should return true since a Country object will always be equal to itself.

2. Scenario: Comparing a Country object with a null reference.  
   Expected Result: The equals() method should return false as any object is not equal to null.

3. Scenario: Comparing a Country object with an object of a different class.
   Expected Result: The equals() method should return false as it can't be equal to an object of a different class.
   
4. Scenario: Comparing two different Country objects with the same isoCode.  
   Expected Result: The equals() method should return true as in this specific case equality is based only on the isoCode attribute.

5. Scenario: Comparing two different Country objects with different isoCodes.  
   Expected Result: The equals() method should return false as in this case, two objects with different isoCodes can't be equal.

6. Scenario: Comparing a Country object with a Country object where the isoCode of the latter is null.
   Expected Result: The equals method would throw a NullPointerException because it attempts to access a null value.

Note: It could be necessary to refactor the code to check if "isoCode" is null to avoid NullPointerException.
*/
package org.agoncal.application.petstore.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class Country_equals_f2d574000d_Test {

    private Country country1;
    private Country country2;

    @Before
    public void setUp() throws Exception {
        country1 = new Country("123", "Test Country", "Test Printable Name", "TST", "456");
        country2 = new Country("456", "Other Country", "Other Printable Name", "OTR", "789");
    }

    @Test
    public void testEquals_sameObject() {
        assertTrue(country1.equals(country1));
    }

    @Test
    public void testEquals_nullReference() {
        assertFalse(country1.equals(null));
    }

    @Test
    public void testEquals_differentClassObject() {
        Object obj = new String("Test");
        assertFalse(country1.equals(obj));
    }

    @Test
    public void testEquals_sameIsoCode() {
        Country country3 = new Country("123", "Different Country", "Different Printable Name", "DIF", "891");
        assertTrue(country1.equals(country3));
    }

    @Test
    public void testEquals_differentIsoCode() {
        assertFalse(country1.equals(country2));
    }

    @Test(expected = NullPointerException.class)
    public void testEquals_nullIsoCode() {
        Country country4 = new Country(null, "Null IsoCode Country", "Null IsoCode Printable Name", "NUL", "001");
        country1.equals(country4);
    }
}
